openapi: 3.0.0
info:
  title: HungryHub
  description: This is a food delivery API that allows users to order food from various restaurants, manage their profiles, and enables restaurant owners to manage their menus. This document provides an overview of the key features and functionalities of the API.
  version: 1.0.0

servers:
  - url: http://localhost:3000/api/v1
    description: Development server
  - url: https://beautiful-cow-parka.cyclic.cloud/api/v1
    description: Production server

tags:
  - name: Authentication
    description: User authentication
  - name: User
    description: User management
  - name: Orders
    description: Order management
  - name: Admin
    description: Restaurant management

paths:
  /signup:
    post:
      summary: Create a new user using email, password and name
      tags:
        - Authentication
      requestBody:
        required: true
        description: password must be at least 6 characters and contain a number, uppercase and lowercase letter and a special character
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John
                email:
                  type: string
                  format: email
                  example: john@example.com
                password:
                  type: string
                  example: password 
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad request
        500:
          description: Internal server error
  /signin:
    post:
      summary: Sign in user using email and password
      tags:
        - Authentication
      requestBody:
        required: true
        description: Login user object 
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  example: password
              
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/User'
        400:
          description: Bad request
        500:
          description: Internal server error
  /logout:
    post:
      security: 
        - bearerAuth: []
      summary: Sign out user
      tags:
        - User
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: 
                    type: boolean
                  message: 
                    type: string
        500:
          description: Internal server error
        
  /userdashboard:
    get:
      security: 
        - bearerAuth: []
      summary: Show information about user
      tags:
        - User
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/User'
        500:
          description: Internal server error
  /userdashboard/update:
    patch:
      security:
        - bearerAuth: []
      summary: Update user information
      tags:
        - User
      requestBody:
        required: true
        description: Update a user information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              type: object
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad request
        500:
          description: Internal server error
  /user/upload-image:
    post:
      security:
        - bearerAuth: []
      summary: Upload user profile photo
      tags:
        - User
      requestBody:
        required: true
        description: Upload user profile photo
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: successful operation
          content:
            application/json:
              type: object
              schema:
                properties:
                  success: 
                    type: boolean
                  message: 
                    type: string

  /user/update-password:
    patch:
      security: 
        - bearerAuth: []
      summary: Update user password
      tags:
        - User
      requestBody:
        required: true
        description: password must be at least 6 characters and contain a number, uppercase and lowercase letter and a special character
        content:
          application/json:
            schema:
              type: object
              properties:
                  oldPassword:
                    type: string
                    example: password
                  newPassword:
                    type: string
                    example: password
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        400:
          description: Bad request
        
  /forgot-password:
    get:
      security: 
        - bearerAuth: []
      summary: Send reset password link
      tags:
        - User
      requestBody:
        required: true
        description: Send reset password link
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: john@example.com
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: 
                    type: boolean
                  message: 
                    type: string
        400:
          description: Bad request
        500:
          description: Internal server error
        
  /password/reset/{token}:
    post:
      security: 
        - bearerAuth: []
      summary: Reset password
      tags:
        - User
      requestBody:
        required: true
        description: Reset password
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: password
                confirmPassword:
                  type: string
                  example: password
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: 
                    type: boolean
                  message: 
                    type: string
        400:
          description: Bad request
        500:
          description: Internal server error
        

  /order/create:
    post:
      security: 
        - bearerAuth: []
      summary: Place order
      tags:
        - Orders
      requestBody:
        required: true
        description: Create a order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        400:
          description: Bad request
        500:
          description: Internal server error
        
  /my-order:
    get:
      security: 
        - bearerAuth: []
      summary: Get order tracking
      tags:
        - Orders
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        400:
          description: Bad request
        500:
          description: Internal server error
        

  /restaurants:
    get:
      summary: Get all restaurants
      tags:
        - User
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Pizza Hut
                    address:
                      type: object
                      properties:
                        city:
                          type: string
                          example: London
                        area:
                          type: string
                          example: Central
        500:
          description: Internal server error
        
  /restaurants/{restaurantId}:
    get:
      summary: Get all menu by restaurant
      tags:
        - User
      parameters:
        - in: path
          name: restaurantId
          required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu'
        500:
          description: Internal server error
        
  /menus:
    get:
      summary: Get all menus
      tags:
        - User
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu'
        500:
          description: Internal server error
        
  /menu/{menuId}:
    get:
      summary: Get menu by id
      tags:
        - User
      parameters:
        - in: path
          name: menuId
          required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
        500:
          description: Internal server error
  /menu/{menuId}/review:
    post:
      security: 
        - bearerAuth: []
      summary: Add review
      tags:
        - User
      requestBody:
        required: true
        description: Create a review
        content:
          application/json:
            schema:
              $ref: '#/components/Review'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/Review'
        400:
          description: Bad request
        500:
  /menu/{menuId}/review/{reviewId}:
    patch:
      security: 
        - bearerAuth: []
      summary: Update review
      tags:
        - User
      parameters:
        - in: path
          name: menuId
          required: true
        - in: path
          name: reviewId
          required: true
      requestBody:
        required: true
        description: Update a review
        content:
          application/json:
            schema:
              $ref: '#/components/Review'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/Review'
        500:
          description: Internal server error
    delete:
      security: 
        - bearerAuth: []
      summary: Delete review
      tags:
        - User
      parameters:
        - in: path
          name: menuId
          required: true
        - in: path
          name: reviewId
          required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/Review'
        500:
          description: Internal server error

  /admin:
    post:
      security: 
        - bearerAuth: []
      summary: Create restaurant 
      tags:
        - Admin
      requestBody:
        required: true
        description: Create a restaurant
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        400:
          description: Bad request
        500:
          description: Internal server error
  /admin/dashboard:
    get:
      summary: Get restaurant info
      security:
        - bearerAuth: []
      tags:
        - Admin
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        500:
          description: Internal server error
    patch:
      security: 
        - bearerAuth: []
      summary: Update restaurant
      tags:
        - Admin
      requestBody:
        required: true
        description: Update a restaurant
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        400:
          description: Bad request
        500:
          description: Internal server error
    delete:
      security: 
        - bearerAuth: []
      summary: Delete restaurant
      tags:
        - Admin
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        500:
          description: Internal server error
  /admin/dashboard/menu:
    post:
      security:
        - bearerAuth: []
      summary: Create menu
      tags:
        - Admin
      requestBody:
        required: true
        description: Create a menu
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
        400:
          description: Bad request
        500:
          description: Internal server error
  /admin/dashboard/menus:
    get:
      security:
        - bearerAuth: []
      summary: Get all menus
      tags:
        - Admin
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu'
        500:
          description: Internal server error
  /admin/dashboard/menus/{menuId}:
    patch:
      security: 
        - bearerAuth: []
      summary: Update menu
      tags:
        - Admin
      parameters:
        - in: path
          name: menuId
          required: true
      requestBody:
        required: true
        description: Update a menu
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
        400:
          description: Bad request
        500:
          description: Internal server error
    delete:
      security: 
        - bearerAuth: []
      summary: Delete menu
      tags:
        - Admin
      parameters:
        - in: path
          name: menuId
          required: true
      responses:
        200:
          description: successful operation
        500:
          description: Internal server error

components:
  schemas:              
    Order:
      type: object
      properties:
        shippingInfo:
          schema:
            $ref: '#/components/shippingInfo'
        orderStatus:
          type: string
          example: pending
        totalAmount:
          type: number
          example: 100
        orderItems:
          type: array
          items:
            $ref: '#/components/Item'      
        deliveryFree:
          type: number
          example: 0
        customerId:
          type: string
    Admin:
      type: object
      properties:
        name:
          type: string
          example: Pizza Hut
        address:
          type: object
          properties:
            city:
              type: string
              example: London
            area:
              type: string
              example: Central
        hoursOfOperation:
          type: string
          example: 9:00 - 22:00
        phone:
          type: string
          example: 123456789   
    Menu:
      type: object
      properties:
        name:
          type: string
          example: Pizza
        description:
          type: string
          example: Pizza with tomato sauce
        price:
          type: number
          example: 10
        category:
          type: string
          example: Italian
        restaurantName:
          type: string
          example: Pizza Hut
    User:
      type: object
      properties:
        name:
          type: string
          example: Alice
        address:
          type: object
          properties:
            city:
              type: string
              example: London
            street:
              type: string
              example: Central
            postalCode:
              type: string
              example: 123
            houseNumber:
              type: string
              example: 123
        phone:
          type: string
          example: 123456789
        email:
          type: string
          format: email
          example: alice@example.com
        image: 
          type: object
          properties:
            id:
              type: string
            url:
              type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  Review:
      type: object
      properties:
        review:
          type: string
          example: Good
  Item:
      type: object
      properties:
        name:
          type: string
          example: pizza
        price:
          type: number
          example: 10
        quantity:
          type: number
          example: 5
        image:
          properties:
            id: 
              type: string
            url: 
              type: string
        menuId:
          type: string
          example: 1
  shippingInfo:
      type: object
      properties:
        address:
          type: string
          example: 123 Central
        city:
          type: string
          example: London
        postalCode:
          type: string
          example: 1212
        phone:
          type: string
          example: 123456789